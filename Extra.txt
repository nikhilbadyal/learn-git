1. The rules for the patterns you can put in the .gitignore file are as follows:
    • Blank lines or lines starting with # are ignored.
    • Standard glob patterns work, and will be applied recursively throughout the entire working tree.
    • You can start patterns with a forward slash (/) to avoid recursivity.
    • You can end patterns with a forward slash (/) to specify a directory.
    • You can negate a pattern by starting it with an exclamation point (!)


1. `git log -p --stat --pretty <-n> --graph --since --until --author=<name> -S` - To detect commit history.`-p` shows the difference introduced in each commit. `-n` command to limit the commits. `--stat` is used if you want to see abbreviated stats for each commit.`--pretty=online/short/full/fuller/format` this option changes the log output to formats other than the default. The `oneline` value for this option prints each commit on a single line, which is useful if you’re looking at a lot of commits. In addition, the `short`, `full`, and `fuller` values show the output in roughly the same format but with less or more information, respectively.The most interesting option value is `format`, which allows you to specify your own log output format. `--graph` option adds a nice little ASCII graph showing your branch and merge history. `--since` tag and `--until` tags are self explainatory.`--author` this helps in filter based on the specifi autor. `-S` pickaxe option take a string and show only those commit that changed the number of occurances of that string.`--author` to filter by author.

| Specifier | Description of Output                           |
| --------- | ----------------------------------------------- |
| %H        | Commit hash                                     |
| %h        | Abbreviated commit hash                         |
| %T        | Tree hash                                       |
| %t        | Abbreviated tree hash                           |
| %P        | Parent hashes                                   |
| %p        | Abbreviated parent hashes                       |
| %an       | Author name                                     |
| %ae       | Author email                                    |
| %ad       | Author date (format respects the --date=option) |
| %ar       | Author date, relative                           |
| %cn       | Committer name                                  |
| %ce       | Committer email                                 |
| %cd       | Committer date                                  |
| %cr       | Committer date, relative                        |
| %s        | Subject                                         |

## Common Options to git log are
| Option  | Description |
| -------|--------|
| -p                          | Show the patch introduced with each commit.|
| --stat                      | Show statistics for files modified in each commit. |
| --shortstat                 | Display only the changed/insertions/deletions line from the --stat command.|
| --name-only                 | Show the list of files modified after the commit information.|
| --name-status               | Show the list of files affected with added/modified/deleted information as well.|
| --abbrev-commit             | Show only the first few characters of the SHA-1 checksum instead of all 40.|
| --relative-date             | Display the date in a relative format (for example, “2 weeks ago”) instead of using the full date format. |
| --graph                     | Display an ASCII graph of the branch and merge history beside the log output.                                                           |
| --pretty                    | Show commits in an alternate format. Option values include oneline, short,full, fuller, and format (where you specify your own format). |
| --oneline                   | Shorthand for --pretty=oneline --abbrev-commit used together.|